-- DogUiLib.lua
local DogUiLib = {}

-- Serviços
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")

-- ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "DogUiLib"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = PlayerGui

-- Funções utilitárias
local function makeDraggable(frame, handle)
    local dragging, dragStart, startPos
    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    handle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
                                       startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

local function addHover(button, normal, hover)
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.15), {BackgroundColor3 = hover}):Play()
    end)
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.15), {BackgroundColor3 = normal}):Play()
    end)
end

local function styleFrame(frame, radius)
    local corner = Instance.new("UICorner", frame)
    corner.CornerRadius = UDim.new(0, radius)
    local stroke = Instance.new("UIStroke", frame)
    stroke.Thickness = 2
    stroke.Color = Color3.fromRGB(0,255,255)
end

local function animateOpen(frame)
    frame.Visible = true
    frame.BackgroundTransparency = 1
    local scale = Instance.new("UIScale", frame)
    scale.Scale = 0.8
    TweenService:Create(frame, TweenInfo.new(0.25), {BackgroundTransparency = 0}):Play()
    TweenService:Create(scale, TweenInfo.new(0.25, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Scale = 1}):Play()
    task.delay(0.3,function() scale:Destroy() end)
end

local function animateClose(frame)
    local scale = Instance.new("UIScale", frame)
    scale.Scale = 1
    TweenService:Create(frame, TweenInfo.new(0.25), {BackgroundTransparency = 1}):Play()
    TweenService:Create(scale, TweenInfo.new(0.25, Enum.EasingStyle.Back, Enum.EasingDirection.In), {Scale = 0.8}):Play()
    task.delay(0.25,function() frame.Visible = false scale:Destroy() end)
end

local function notify(message)
    local notif = Instance.new("TextLabel")
    notif.Size = UDim2.new(0,250,0,40)
    notif.Position = UDim2.new(0.5,-125,0.85,0)
    notif.BackgroundColor3 = Color3.fromRGB(20,20,25)
    notif.TextColor3 = Color3.fromRGB(0,255,255)
    notif.Text = message
    notif.Font = Enum.Font.Arcade
    notif.TextSize = 20
    notif.Parent = ScreenGui
    styleFrame(notif,8)
    notif.BackgroundTransparency = 1
    TweenService:Create(notif, TweenInfo.new(0.3), {BackgroundTransparency=0}):Play()
    task.delay(2,function()
        TweenService:Create(notif,TweenInfo.new(0.3),{BackgroundTransparency=1}):Play()
        game.Debris:AddItem(notif,0.3)
    end)
end

-- ===== Criar Janela Principal =====
function DogUiLib:CreateWindow(name)
    local MainWindow = Instance.new("Frame")
    MainWindow.Size = UDim2.new(0,420,0,520)
    MainWindow.Position = UDim2.new(0.5,-210,0.5,-260)
    MainWindow.BackgroundColor3 = Color3.fromRGB(25,25,30)
    MainWindow.BorderSizePixel = 0
    MainWindow.Visible = true
    MainWindow.Parent = ScreenGui
    styleFrame(MainWindow,20)

    local MainTitle = Instance.new("TextLabel",MainWindow)
    MainTitle.Size = UDim2.new(1,-50,0,50)
    MainTitle.BackgroundColor3 = Color3.fromRGB(20,20,25)
    MainTitle.Text = name
    MainTitle.TextColor3 = Color3.fromRGB(0,255,255)
    MainTitle.Font = Enum.Font.Arcade
    MainTitle.TextSize = 28
    makeDraggable(MainWindow,MainTitle)

    local CloseBtn = Instance.new("TextButton",MainWindow)
    CloseBtn.Size = UDim2.new(0,50,0,50)
    CloseBtn.Position = UDim2.new(1,-50,0,0)
    CloseBtn.BackgroundColor3 = Color3.fromRGB(200,50,50)
    CloseBtn.Text = "X"
    CloseBtn.TextColor3 = Color3.fromRGB(255,255,255)
    CloseBtn.Font = Enum.Font.SourceSansBold
    CloseBtn.TextSize = 24
    addHover(CloseBtn, Color3.fromRGB(200,50,50), Color3.fromRGB(255,70,70))
    CloseBtn.MouseButton1Click:Connect(function()
        animateClose(MainWindow)
    end)

    -- Container de abas
    local TabContainer = Instance.new("Frame",MainWindow)
    TabContainer.Size = UDim2.new(1,-20,1,-70)
    TabContainer.Position = UDim2.new(0,10,0,60)
    TabContainer.BackgroundColor3 = Color3.fromRGB(35,35,45)
    TabContainer.BorderSizePixel = 0
    styleFrame(TabContainer,15)

    local TabObj = {}
    function TabObj:AddButton(config)
        local btn = Instance.new("TextButton",TabContainer)
        btn.Size = UDim2.new(0,160,0,45)
        btn.BackgroundColor3 = Color3.fromRGB(0,200,255)
        btn.TextColor3 = Color3.fromRGB(0,0,0)
        btn.Font = Enum.Font.Arcade
        btn.TextSize = 22
        btn.Text = config.Name
        addHover(btn,Color3.fromRGB(0,200,255),Color3.fromRGB(0,255,255))
        btn.MouseButton1Click:Connect(function()
            if config.Callback then config.Callback() end
        end)
    end

    function TabObj:AddToggle(config)
        local toggle = Instance.new("TextButton",TabContainer)
        toggle.Size = UDim2.new(0,160,0,45)
        toggle.BackgroundColor3 = Color3.fromRGB(0,150,255)
        toggle.TextColor3 = Color3.fromRGB(0,0,0)
        toggle.Font = Enum.Font.Arcade
        toggle.TextSize = 22
        local state = config.Default or false
        toggle.Text = config.Name..": "..(state and "ON" or "OFF")
        addHover(toggle,Color3.fromRGB(0,150,255),Color3.fromRGB(0,200,255))
        toggle.MouseButton1Click:Connect(function()
            state = not state
            toggle.Text = config.Name..": "..(state and "ON" or "OFF")
            if config.Callback then config.Callback(state) end
        end)
    end

    function TabObj:AddSlider(config)
        local slider = Instance.new("TextButton",TabContainer)
        slider.Size = UDim2.new(0,160,0,45)
        slider.Text = config.Name..": "..(config.Default or config.Min or 0)
        slider.BackgroundColor3 = Color3.fromRGB(0,150,255)
        slider.TextColor3 = Color3.fromRGB(0,0,0)
        slider.Font = Enum.Font.Arcade
        slider.TextSize = 22
        addHover(slider,Color3.fromRGB(0,150,255),Color3.fromRGB(0,200,255))
        local dragging = false
        slider.MouseButton1Down:Connect(function() dragging = true end)
        UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end
        end)
        RunService.RenderStepped:Connect(function()
            if dragging then
                local mouse = UserInputService:GetMouseLocation()
                local pos = math.clamp(mouse.X - slider.AbsolutePosition.X,0,slider.AbsoluteSize.X)
                local val = math.floor((pos/slider.AbsoluteSize.X)*(config.Max-config.Min)+config.Min)
                slider.Text = config.Name..": "..val
                if config.Callback then config.Callback(val) end
            end
        end)
    end

    function TabObj:AddDropdown(config)
        local drop = Instance.new("TextButton",TabContainer)
        drop.Size = UDim2.new(0,160,0,45)
        drop.Text = config.Name.." ▼"
        drop.BackgroundColor3 = Color3.fromRGB(0,150,255)
        drop.TextColor3 = Color3.fromRGB(0,0,0)
        drop.Font = Enum.Font.Arcade
        drop.TextSize = 22
        addHover(drop,Color3.fromRGB(0,150,255),Color3.fromRGB(0,200,255))
        local open = false
        local optionFrame = Instance.new("Frame",drop)
        optionFrame.Size = UDim2.new(1,0,0,#config.Options*30)
        optionFrame.Position = UDim2.new(0,0,1,0)
        optionFrame.BackgroundColor3 = Color3.fromRGB(20,20,30)
        optionFrame.Visible = false
        for i,opt in pairs(config.Options) do
            local btn = Instance.new("TextButton",optionFrame)
            btn.Size = UDim2.new(1,0,0,30)
            btn.Position = UDim2.new(0,0,0,(i-1)*30)
            btn.Text = opt
            btn.BackgroundColor3 = Color3.fromRGB(0,180,255)
            btn.TextColor3 = Color3.fromRGB(0,0,0)
            addHover(btn,Color3.fromRGB(0,180,255),Color3.fromRGB(0,220,255))
            btn.MouseButton1Click:Connect(function()
                drop.Text = config.Name.." "..opt
                optionFrame.Visible = false
                if config.Callback then config.Callback(opt) end
            end)
        end
        drop.MouseButton1Click:Connect(function()
            open = not open
            optionFrame.Visible = open
        end)
    end

    function TabObj:AddParagraph(config)
        local para = Instance.new("TextLabel",TabContainer)
        para.Size = UDim2.new(1,0,0,60)
        para.BackgroundColor3 = Color3.fromRGB(20,20,30)
        para.TextColor3 = Color3.fromRGB(0,255,255)
        para.TextWrapped = true
        para.Font = Enum.Font.Arcade
        para.TextSize = 20
        para.Text = config.Text or ""
    end

    function TabObj:AddSection(config)
        local sec = Instance.new("TextLabel",TabContainer)
        sec.Size = UDim2.new(1,0,0,30)
        sec.BackgroundTransparency = 1
        sec.TextColor3 = Color3.fromRGB(0,255,255)
        sec.Font = Enum.Font.Arcade
        sec.TextSize = 20
        sec.Text = config.Text or ""
    end

    function TabObj:AddTextbox(config)
        local tb = Instance.new("TextBox",TabContainer)
        tb.Size = UDim2.new(0,160,0,45)
        tb.PlaceholderText = config.Placeholder or ""
        tb.Text = ""
        tb.BackgroundColor3 = Color3.fromRGB(0,150,255)
        tb.TextColor3 = Color3.fromRGB(0,0,0)
        tb.Font = Enum.Font.Arcade
        tb.TextSize = 22
        addHover(tb,Color3.fromRGB(0,150,255),Color3.fromRGB(0,200,255))
        tb.FocusLost:Connect(function(enter)
            if config.Callback then config.Callback(tb.Text) end
        end)
    end

    function TabObj:Notify(text)
        notify(text)
    end

    return TabObj, MainWindow
end

-- Retornar a library
return DogUiLib
